<?xml version="1.0"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:flex="com.izerui.zookeeper.flex.*"
               creationComplete="loadRootPath();">

    <s:layout>
        <s:VerticalLayout verticalAlign="middle" horizontalAlign="center"/>
    </s:layout>

    <fx:Script>
        <![CDATA[
        import com.adobe.cairngorm.control.CairngormEventDispatcher;
        import com.izerui.zookeeper.flex.dto.Node;
        import com.izerui.zookeeper.flex.event.DeletePathEvent;
        import com.izerui.zookeeper.flex.event.GetChildrenEvent;

        import mx.collections.ArrayCollection;
        import mx.controls.Alert;
        import mx.events.CloseEvent;
        import mx.events.ItemClickEvent;
        import mx.events.ListEvent;
        import mx.managers.PopUpManager;

        [Bindable]
        private var treeData:ArrayCollection;

        private function loadRootPath():void {
            var root:Node = new Node();
            root.name = "/";
            root.hasChildren = true;
            //预先加载父节点
            wrapChildren(root);
            treeData = new ArrayCollection([root]);
        }

        private function openTreeNode(item:Node):void {
            if (item && item.children) {
                for each(var child:Node in item.children) {
                    wrapChildren(child);
                }
            }
        }

        private function wrapChildren(node:Node, forcibly:Boolean = false):void {
            //当有子节点，并且children为空，则需要加载
            if (((node.children == null || node.children.length == 0) && node.hasChildren) || forcibly) {
                CairngormEventDispatcher.getInstance().dispatchEvent(new GetChildrenEvent(node, function (data:ArrayCollection):void {
                    node.children = data;
                    treeData.itemUpdated(node);
                }));
            }
        }

        private function linkButtonBar_itemClickHandler(event:ItemClickEvent):void {
            switch (event.label) {
                case "reload":
                    loadRootPath();
                    break;
                case "export":
                    navigateToURL(new URLRequest("export"), "_blank");
                    break;
                case "add":
                    if (myADG.selectedIndex == -1) {
                        return;
                    }
                    var createPathPanel:CreatePathPanel = new CreatePathPanel();
                    createPathPanel.parentNode = myADG.selectedItem as Node;
//                    createPathPanel.addEventListener(WrapNodeChildrenEvent.wrapNodeChildrenEvent, function(event:WrapNodeChildrenEvent):void{
//                       wrapChildren(event.node,true);
//                    });
                    PopUpManager.addPopUp(createPathPanel, this, true);
                    PopUpManager.centerPopUp(createPathPanel);
                    createPathPanel.setFocus();
                    break;
                case "delete":
                    if (myADG.selectedIndex == -1) {
                        return;
                    }
                    if (myADG.selectedItem.children != null && myADG.selectedItem.children.length > 0) {
                        Alert.show("delete the children node before this!", "error");
                        return;
                    }
                    Alert.show("Are you sure you want to delete it?", "delete", Alert.YES | Alert.NO, null, function (event:CloseEvent):void {
                        if (event.detail == Alert.YES) {
                            CairngormEventDispatcher.getInstance().dispatchEvent(new DeletePathEvent(myADG.selectedItem as Node,
                                    function (data:Object):void {
                                        var parentNode:Node = (myADG.selectedItem as Node).parent;
                                        var children:ArrayCollection = parentNode.children;
                                        children.removeItemAt(children.getItemIndex((myADG.selectedItem as Node)));
                                        if (children.length == 0) {
                                            parentNode.hasChildren = false;
                                            parentNode.children = null;
                                            treeData.itemUpdated(parentNode);
                                        }
                                    }
                            ));
                        }
                    });
                    break;
                case "edit":
                    if (myADG.selectedIndex == -1) {
                        return;
                    }
                    if (myADG.selectedItem.children != null && myADG.selectedItem.children.length > 0) {
                        return;
                    }
                    var editPanel:EditDataPanel = new EditDataPanel();
                    editPanel.node = myADG.selectedItem as Node;
                    PopUpManager.addPopUp(editPanel, this, true);
                    PopUpManager.centerPopUp(editPanel);
                    editPanel.setFocus();
                    break;
            }
        }

        private function myADG_itemDoubleClickHandler(event:ListEvent):void {
            myADG.expandItem(myADG.selectedItem, !myADG.isItemOpen(myADG.selectedItem), true);
            openTreeNode(myADG.selectedItem as Node);
        }

        [Bindable]
        public function get endpoint():String {
            var url:String = this.url;
            url = url.substring(0, url.lastIndexOf("/"));
            trace(url);
            url += "/messagebroker/amf";
            return url;
        }
        ]]>
    </fx:Script>

    <fx:Style source="/assets/css/index.css"/>

    <fx:Declarations>
        <flex:Services/>
        <flex:Controller/>
    </fx:Declarations>

    <mx:Panel title="zookeeper"
              height="90%" width="90%">

        <mx:AdvancedDataGrid id="myADG" sortableColumns="false" sortExpertMode="true"
                             width="100%" height="100%" itemOpen="openTreeNode((event.item as Node))"
                             doubleClickEnabled="true" itemDoubleClick="myADG_itemDoubleClickHandler(event)">

            <mx:dataProvider>
                <mx:HierarchicalData source="{treeData}"
                                     childrenField="children"/>
            </mx:dataProvider>

            <mx:columns>
                <mx:AdvancedDataGridColumn dataTipField="name" dataField="name" headerText="path"/>
                <mx:AdvancedDataGridColumn dataField="childNum">
                    <mx:itemRenderer>
                        <fx:Component>
                            <mx:Label text="{(data as Node).children.length}" paddingLeft="5">
                                <fx:Script><![CDATA[
                                    import com.izerui.zookeeper.flex.dto.Node;
                                    ]]></fx:Script>
                            </mx:Label>
                        </fx:Component>
                    </mx:itemRenderer>
                </mx:AdvancedDataGridColumn>
                <mx:AdvancedDataGridColumn dataTipField="data" dataField="data"/>
            </mx:columns>
        </mx:AdvancedDataGrid>
        <mx:ControlBar>
            <s:HGroup horizontalAlign="right">
                <mx:LinkBar id="linkButtonBar" iconField="ico" itemClick="linkButtonBar_itemClickHandler(event)">
                    <mx:dataProvider>
                        <s:ArrayCollection>
                            <fx:Object label="reload" ico="@Embed('/assets/img/reload.png')"/>
                            <fx:Object label="add" ico="@Embed('/assets/img/add.png')"/>
                            <fx:Object label="edit" ico="@Embed('/assets/img/edit.png')"/>
                            <fx:Object label="delete" ico="@Embed('/assets/img/delete.png')"/>
                            <fx:Object label="export" ico="@Embed('/assets/img/export.png')"/>
                        </s:ArrayCollection>
                    </mx:dataProvider>
                </mx:LinkBar>
            </s:HGroup>
        </mx:ControlBar>
    </mx:Panel>

</s:Application>